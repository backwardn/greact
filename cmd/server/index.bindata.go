// Code generated by go-bindata.
// sources:
// cmd/server/index.html
// DO NOT EDIT!

package server

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdServerIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x6b\x73\xdb\xb6\x96\xdf\xf3\x2b\x4e\x35\xf7\xde\xa1\x6a\x85\xb2\x1d\xaf\xaf\xeb\x58\x99\x49\x13\x27\x9b\xdd\xd4\xf6\xc4\x69\xbb\x1d\x5f\x4f\x0a\x91\x87\x12\x62\x12\xe0\x02\xa0\x64\x4d\xd6\xff\x7d\x07\x00\x5f\x92\xf8\x94\x3d\x6d\x67\x76\xf9\xc1\x16\x49\x9c\x83\xf3\xc6\xc1\xe3\xf0\x6c\xae\xa2\xf0\xd5\xb3\x67\x67\x73\x24\xfe\xab\x67\x00\x00\x67\xd2\x13\x34\x56\xf6\x46\x5f\xe3\x31\xbc\xe1\xf1\x4a\xd0\xd9\x5c\xc1\xe1\xfe\xc1\x09\x7c\x9e\x23\xbc\xe7\xf0\x3a\x51\x73\x2e\xa4\x0b\xaf\xc3\x10\xcc\x6b\x09\x02\x25\x8a\x05\xfa\x6e\x19\xfc\x67\x89\xc0\x03\x50\x73\x2a\x41\xf2\x44\x78\x08\x1e\xf7\x11\xa8\x84\x19\x5f\xa0\x60\xe8\xc3\x74\x05\x04\x7e\xbc\x7e\xfb\x5c\xaa\x55\x88\x65\xe8\x90\x7a\xc8\x24\x82\x9a\x13\x05\x1e\x61\x30\x45\x08\x78\xc2\x7c\xa0\x0c\xd4\x1c\xe1\xe3\x87\x37\xe7\x17\xd7\xe7\x10\xd0\x10\xdd\x67\x39\xa8\xe3\x0c\x61\xf2\x0a\xbe\xe5\x0f\x52\x7c\x3f\x91\x18\x96\x38\x85\xa9\xe0\x4b\x89\x02\x5e\x5f\x7d\x00\xc2\x7c\xb8\xe0\x3e\xba\x5f\xa5\xb9\x57\x1c\x08\x48\xca\x66\xa1\x26\x35\x8a\x38\x33\x8f\x9d\x58\x60\x80\x42\x50\x36\x33\x28\xa4\x22\xcc\x27\xc2\x97\xa0\xd9\x28\x63\x18\xba\x6b\xdd\x7a\x9c\x49\x05\x54\xea\x16\xff\x71\x0d\x13\x50\xab\x18\x79\x00\xb1\xe0\x1e\x4a\x09\xdf\x4d\x26\x30\x48\x98\x8f\x01\x65\xe8\x0f\x5e\xae\x01\xd3\x00\x9c\x0c\x74\xb8\xc1\x8f\xbe\x66\x21\x9f\x92\xd0\x15\xf8\xdf\x09\x15\x08\x13\x48\x7f\xbd\xac\x6b\x19\xc8\xa2\x91\x33\x08\xe4\x60\xf8\xf2\xd9\x56\x5b\x4b\x32\xe3\x3e\xbe\x11\xab\x58\xf1\x32\x88\x67\x9e\x68\xb0\x9a\x1e\xbc\x0c\x64\x9b\x5a\xd3\x0a\xd5\x27\xc2\x7c\x1e\xfd\x42\xc2\x04\xa5\x33\xad\x62\x2b\xbb\x0a\x12\x5c\x61\x80\xde\xd1\x30\xbc\x5e\x31\xcf\x99\x56\x10\xa0\xaf\x87\xd1\xd6\xe3\x87\x0a\x0e\x53\x5a\x63\x14\x01\x17\x11\x61\x1e\xd6\x12\xcc\xf8\xd2\x69\xa2\xd1\x0a\xeb\x46\xa2\x37\x02\x26\xd1\xbb\x85\x49\xa6\x5b\x77\x2e\x14\x8d\xd0\xa9\xa1\x55\x5f\x02\x55\x22\x18\x48\xf4\xe0\x7b\x38\xd8\xdf\xdf\x87\x3d\x83\x05\xc6\xe6\x6e\x7f\x7f\xff\x51\x7c\x5a\xe2\x12\x45\xc3\xb2\x0e\xf5\x7d\x83\x06\x3f\xe3\xbd\x3a\x67\xda\x4d\x05\x4c\x0c\x70\xf9\x51\x23\xd8\x5b\xdc\x02\x4b\x1f\xad\x83\x3d\x00\x86\x12\x2b\xa4\xaa\x0d\x3e\x75\x90\x25\x65\x3e\x5f\x6e\xfa\x47\x9d\x2a\x6c\x6b\xd7\xd2\x02\x93\xf4\x7e\x9b\xd8\xb4\xe7\x52\x3f\x12\xc3\xa0\x6b\x2f\xba\x6d\xd1\x87\xbe\xab\xed\xa1\x1a\x81\x9a\x0b\xbe\x04\x86\x4b\x38\x17\x82\x0b\x67\xe0\x11\xc6\xb8\x02\xbc\x8f\xb9\x50\x3a\xb4\x3a\x0c\xa9\x9a\xa3\xc8\xf8\x67\x5c\x58\x12\xa9\x84\x94\xbc\x61\x95\xf2\x1e\xb6\xb5\x1f\xa2\x02\x9e\xa8\x38\x51\x3f\x26\x01\x4c\x60\x30\x68\x8e\x0b\xd5\x24\x1b\x1b\x22\x4c\xc9\x53\xf8\x06\x97\x5f\x7e\xfd\x74\x79\xf1\xf1\xb7\x53\x78\x7e\x30\x82\xcb\x2f\x9f\xde\xfe\xfa\x29\xfb\xfd\xe6\xd3\xf9\xeb\xcf\xd9\xcd\xe7\x4f\x3f\x5f\xbc\xc9\x6e\x5e\x5f\x5d\x9d\x5f\xbc\xcd\xee\xce\xff\xeb\xcd\xc7\xec\xf7\xc5\xe5\xc5\x8f\x1f\x2f\xdf\xfc\x67\x76\x7f\xfd\x9b\x85\x82\x87\x91\x0e\xd8\x09\x4b\x24\xfa\xd5\x0a\x17\x54\xa1\x89\x05\x81\x3f\x82\x69\x12\x34\x39\x69\x21\x85\xbd\x09\xf8\xd6\x22\x5d\xfb\xdf\xd1\xa0\xf5\x0e\x9a\xc6\x42\xad\xee\x1c\x89\x1b\x12\xa9\x3e\x30\x1f\xef\x2f\x03\x67\xf0\x2f\x56\xa5\x8e\xec\xd2\x86\xc6\x42\xf8\x6e\x02\xcf\x0f\x9a\x28\xcc\xfa\xe2\x21\xba\x21\x9f\x39\x45\x67\x32\x99\x4a\x25\x9c\xfd\x11\xb0\x70\xd8\xd0\xd3\x3a\x9f\x65\x72\x53\x0c\x2c\x84\x3d\x38\x68\xc0\xf0\xd0\x16\xa6\xa6\x9a\x77\x64\x33\x35\xef\x1c\x95\x0c\x55\x31\x32\xa3\xa9\x98\xa8\xf9\x08\x82\x90\xcc\xe4\x08\x22\xee\x63\x7b\x60\x45\xa1\xa3\x49\xc9\x61\xb4\xb7\xd0\x28\x0e\x31\x42\xa6\xb4\xab\xd6\xf3\x83\x42\xb8\x26\xdb\x98\xc0\xe0\xfc\xe2\xf2\xfa\xb7\xeb\x0a\x07\xc8\x2e\xeb\x99\x28\x2a\x02\x5c\x0d\x6b\x0f\x1b\x31\xed\x59\xc5\xb8\x8f\x79\x1c\xd5\x2c\x94\xc2\xa8\x8e\xc2\xc1\xf3\x93\x4d\xf2\x2d\x94\x8f\x9b\x50\x69\x14\x2d\x41\xad\x81\xa5\x5e\xfc\x5e\x8f\xbb\x5e\x48\xa4\xac\x90\xab\x41\x2d\x12\x4f\x71\x51\x3b\xa0\xe9\x3c\xcd\x25\x62\xb6\x80\x09\xdc\x0c\xbe\xca\xc1\x6d\xb5\x34\x4c\x3b\x64\xba\xd9\xb7\x87\xa6\x26\xf7\x54\xc1\x04\x1c\xcf\xe8\x7a\x2b\x25\x2b\x5f\xda\x51\x8c\xb2\x74\x28\xde\xef\xea\x2a\x4b\x22\x98\x33\x30\xdd\x68\xe0\xd3\xc1\xc8\xfc\xef\x6d\xe4\x4d\x4c\x7c\xf1\x48\x18\x4e\x89\x77\xf7\x99\x46\xc8\x13\x25\x53\xbd\xfc\x44\xe2\xba\xa1\xdd\xc2\x31\xbc\x57\x6f\xd6\x61\x3f\xbc\x85\x09\x1c\x54\x8c\xd4\x90\x2b\x3f\xc2\x48\x8b\xac\x45\x5c\xe3\xb1\xc9\xc5\xa7\x49\x10\xa0\x80\x88\xac\xc0\x9b\x13\x36\x43\x58\xce\x91\x99\xa1\x1e\xa5\xd2\xc9\x6a\xc4\x05\x6a\x9c\x5c\xac\xdc\x36\xff\xd6\x5c\xbd\x25\x8a\xfc\x42\x71\xe9\x58\x1e\x28\x93\xca\xb5\xa3\x93\x74\x23\x8c\x5c\xdb\x63\x5d\xfa\xd5\xc4\x98\x44\xf5\x81\xa9\xe3\x23\xcd\x1d\xf1\x7d\x31\x82\x45\x0b\x93\x11\x46\xce\xd0\x95\xa8\x7e\xa6\x4c\xbd\x38\x34\x50\xb0\x07\xfb\x23\x58\x8c\x40\x89\xa4\x49\xcf\x35\xb0\x47\x23\xf8\x89\xa8\xb9\x1b\x84\x9c\x0b\x67\x01\x63\x38\x3a\xfc\xe1\xe8\x87\xe3\x7f\x1e\xfe\x70\x3c\x6c\x44\xda\xc8\xdb\x6c\x83\xb7\x16\xc6\x2c\x50\xc8\x97\x30\x49\x09\x9d\x55\x30\xd9\xc2\xa1\x45\x32\xa7\xb3\x79\x19\xcb\x87\x0d\x6e\x5b\x90\xa4\x9a\xd7\xa4\xec\x59\x5c\xdf\x97\x24\xb2\x83\x24\x42\x4e\x7c\x93\xdb\xf7\x12\x45\x50\x66\xe1\x5d\xc8\x89\x3a\x3e\x4a\x8d\xa4\x85\x01\x1d\x37\xbe\xa3\xf2\x82\x5c\x38\xc1\xb0\x2d\x6c\xa4\xdc\x56\x64\x6d\x2d\xbc\x15\x94\x52\xbf\x46\x67\x5d\x45\x6d\xfd\x6a\x61\xa6\x3f\x37\xd4\xaf\x89\xb0\xcd\x9e\xa4\xb8\xc0\x35\x21\xb7\xfb\x52\x9a\xc8\x10\xf6\xef\x48\x34\x0b\xfb\xf7\xff\x7c\xf7\xee\xc4\xce\x30\x1a\x85\x9b\xa6\xc9\x0b\x98\xe8\x1c\x99\x25\xd1\x14\x45\x6d\x82\x5c\x06\xb4\x4a\x59\xb4\x2a\x05\x1a\xbd\x35\xa5\xb8\x55\xba\x4d\x98\x46\x1d\xbc\x29\xbb\xac\x96\x9a\xdb\xd5\x27\x4a\x6b\x14\xac\xdb\x71\x7b\xc8\xea\xd2\x7d\x83\x7d\xca\x25\x55\xde\x1c\x9c\x45\xeb\xe0\x49\x24\x42\x3e\xd9\x39\xfd\xd3\x95\x73\xf0\xa4\xca\x31\xdc\xb1\x24\x0c\xff\x7c\xc6\x0e\x9f\x9e\x31\x8d\xef\xcf\x67\xec\xc5\xd3\x33\x16\x90\x50\xfe\x05\x38\x6b\x1f\x31\xbb\x72\xd6\xe0\xa9\x7a\x62\x2e\x50\x8f\x79\x76\x30\x10\x18\x48\x3d\x9a\x38\x8b\x96\x81\xce\x00\x4d\x26\x85\xf3\xb6\x0f\x78\x45\x2f\x76\xc8\x69\x9c\xc0\x65\xd7\x1a\x40\x9c\xc8\x79\x23\x65\x05\x84\x61\x44\x6a\x46\x46\xba\xeb\x9d\xe6\x9a\x5a\x38\x7a\xcc\x79\x17\x92\x99\x1e\xa7\xea\x71\x64\x01\x2f\x1b\xa1\x3a\xc5\xbd\x81\x54\x82\xb2\xd9\xa0\xdd\xd4\x4a\x44\x1c\xb4\x9b\xc3\x54\x20\xb9\xeb\x60\xe7\x03\xb9\x8a\xa6\x3c\xec\xd7\xff\xe1\x13\xf6\x1f\x24\xcc\x53\x94\xb3\x7e\x14\xbc\x78\x34\x05\xf5\x1a\x6f\xf5\x69\xf8\x9f\x9c\x94\x9d\xf2\x7e\x63\x8c\xbb\x27\xf7\x3a\xa5\xbd\x0e\xa9\xd7\x2f\xa5\x25\x42\x90\x15\x4c\xf2\xa9\x41\x9e\xd8\xb7\xa6\xf4\x21\xb2\x0a\xb8\x93\xf6\xd4\x52\xcf\xdf\x34\xdb\x27\xaf\x75\xdf\xcd\x33\xb8\x91\x25\x70\xa4\x7b\x7b\x94\x50\x2e\x03\xbb\x94\xff\x97\x15\x4e\xda\x63\x3a\x6b\xb7\xa2\xa9\x67\x5a\x5f\x01\x17\xe0\xe8\x38\x44\x4d\x00\x02\x0a\x67\xba\xdf\x97\x40\xf7\xf6\xda\x82\x0c\xb9\xa1\xb7\x30\x29\xa6\x41\x8e\x65\x75\x0f\x28\x7c\xdf\x48\x66\xeb\xea\x1b\xd9\x55\x4b\x26\xe0\xf5\x52\x8f\x34\x62\xfd\x43\x6d\x77\x63\x55\xb6\xfb\x52\xc4\xc8\x52\x6b\x0d\x79\x17\x4b\x56\x34\xc2\x4b\x41\x67\x54\x53\xfe\x96\x28\x74\xed\x9e\xcf\x73\x28\xed\x0f\xd9\x67\x0d\xab\x3d\x34\xd2\x84\x5d\x4e\xbf\xa2\xa7\x6a\xd7\xd2\xf5\x35\xe3\xa7\x2d\x26\x34\x1e\x83\x0e\xd2\xb0\x24\x32\x3a\xbf\xa7\xca\xae\x8b\x99\x70\x36\x6c\x04\x1c\x88\x84\x69\x6e\xdc\x0c\x72\x70\x0a\x8e\x8c\x5b\x54\xbe\x2e\x8d\x74\xc1\x74\x63\x3d\x41\xc6\x5a\x8b\x9d\x73\xa3\x7c\xf1\x0f\xf5\x54\x53\x03\xb5\xc3\xf8\x18\xa2\x42\x28\x74\xdd\x13\xc4\x66\x2b\x3d\x81\x74\xc2\xd2\x83\x1d\xa7\x65\x71\x11\xec\x4a\x71\x67\xed\xfe\x2a\xa8\x42\x27\xf0\x21\xa1\x4c\xc5\x4a\x8c\x20\x86\x84\x49\x12\xa0\x7b\xc5\x29\x53\xda\xba\x59\x6f\xcd\x1b\xac\x3b\xa8\x3e\xf0\xcb\xae\x6b\x55\xde\x41\xd9\x16\x38\xde\x82\x3d\x38\xee\x0c\xcc\x6a\x2c\xee\xb0\x7b\x3a\x1e\x48\x77\x7d\x4b\xa8\xdf\x60\x18\x8f\xa0\x36\x7a\x64\x57\x57\xcd\x32\xc2\xb8\xdd\xf8\xd5\xaa\x3b\x3e\xea\xa6\xb9\x0c\xaa\x97\xe2\xe4\xba\xb6\x46\xe0\x94\xa2\xd9\xde\x76\x00\x1b\xa6\xdb\xcc\xfb\xfb\x4d\xa1\xbc\x0f\xb3\x4b\x12\x86\x29\xb3\x8e\x44\xcf\x72\x6c\xb7\xc2\x7b\x1a\xae\xc5\xb3\x83\xdd\x46\xba\xaf\x09\x64\x63\x06\x1a\x2b\xfa\xdc\xb2\xf3\x9e\x5d\x5b\x12\x8c\x8a\xed\xf7\x3e\xb3\xc8\x92\xd5\x1e\x1c\x8f\xc0\x31\x68\xfe\x6e\xd1\x14\x42\xef\x64\xce\x5d\x45\x2f\xbd\x39\xfa\x49\x88\xd9\x1e\x83\xe3\x63\x48\x56\x56\x03\x43\x2b\xfc\x6e\xb2\xdf\x44\xb4\x83\x0e\xcc\xb2\x68\xc3\xb6\x47\xc7\x20\x5b\x0d\xbc\xb7\xd7\x15\x7c\x73\xab\xc6\x4c\x46\xa9\x3f\xd2\x6a\x4e\x9f\x39\xad\xa8\xf4\x95\xee\xbf\xe4\xc3\x84\xe4\xe1\x22\x97\xcf\x95\xe0\x11\x95\xda\xbc\xea\xb6\x3c\x37\xaf\xcd\xa8\xaa\xad\xc4\xec\x70\x17\x74\xc1\x9c\x48\x98\x22\x32\x90\xfa\x8f\xe2\x10\x50\x81\x90\xc4\xfa\xe7\x01\x44\x34\x0c\xa9\x44\x8f\x33\x1f\x90\x88\x70\xd5\xda\x6f\x5b\x38\x83\x06\xf3\xa5\xdd\xd6\x51\xba\x5a\xaa\x17\x22\x11\xd7\xa9\x95\xf9\xb9\xbd\x52\xbf\x57\x88\xa8\xc6\xb2\xab\xb1\x3e\x2e\xc3\x31\xb4\x64\x16\x55\x63\x7b\x33\x63\x7b\x5d\xd4\x50\x83\xc0\xa6\x2a\x1a\xc7\xd3\xa8\x21\x3f\x7c\xa5\x33\x6b\x47\xc0\xcd\xed\x74\xa5\xb0\xa3\xf4\xd7\x80\xfb\x09\xdd\x1e\xe1\xda\x3c\xfa\x95\xcf\x20\x33\xa7\x78\xaa\xb0\x68\xe6\x3b\xbf\x90\xd0\x31\x29\x61\x7a\x3f\x04\x81\x41\x33\xa7\x72\x25\xb5\x0a\xc6\x5f\xa5\x9b\xe3\xe8\x37\x1a\xe7\xfb\x32\x45\xfa\x52\xcc\xc0\x9e\x98\x4d\xc3\xdc\x7b\x54\xce\xc2\xae\x6e\xc4\x3b\x31\x9a\x61\x79\x14\x9f\x2f\x0e\x47\xf0\x09\x83\x10\x3d\x65\x8c\xbe\x98\xfc\xa6\x2c\x6f\x8b\xe1\xe0\x78\xf8\xa4\x82\xb8\xde\x16\xc4\x08\xee\xcd\x22\x64\x3f\x59\x5c\xf7\x94\x45\xc6\xb7\xec\xcc\xf7\x08\x36\xda\xbd\x38\x7c\x52\x51\x98\x93\x49\x99\x30\xa8\x8e\xb0\x3b\x98\x84\x41\xf2\x68\xe3\x6f\x31\x8a\xad\xf9\xc2\x13\xc8\x21\x53\xe2\xb6\x14\x76\xb6\x87\xfe\xb2\x68\x31\x8a\x2d\xbe\xb7\x4c\xe2\xf0\xe8\x49\x4d\x42\x8f\x95\x99\x2c\xa2\xdc\x3d\x88\x98\x49\xb8\xb9\xd5\x32\x31\x5b\x0b\x23\x98\x72\x1e\xf6\x94\x8f\x46\xdd\x4b\x36\x4a\xac\x3a\xb4\x82\x7c\xb0\x5e\xac\xad\xa6\x75\x9e\x95\x16\x08\x22\x98\xac\x19\xe2\xa2\x3a\x1a\xf5\x41\x69\x24\x37\xd9\x5e\x03\xcd\xfd\xb9\x1b\xb2\x4d\x97\xf9\xb7\xe3\xc2\x65\x48\x1c\x87\x2b\x27\x32\xfb\xc6\xba\xbb\xae\x04\xae\xad\x7f\x9f\x58\xbc\x7a\x42\xd6\x74\xf0\x2f\xbb\x1e\xc0\x23\x66\x47\x05\x85\xe8\xb2\x6b\x5f\xc7\x83\x06\x7f\x1c\xb5\x5d\xa6\x5e\xcd\xbb\xf0\x3d\x43\xe6\x82\xdf\x61\xe6\x21\x4f\xe2\x17\x16\xe5\x5f\xdb\x33\x9a\xcd\xb8\xd3\xfa\x0d\x54\x98\xc0\xd1\xfe\xa6\x19\x2f\x46\xc5\x96\xe5\xe3\xcd\xf9\xe8\xe4\x8f\x33\x67\xcd\xcb\xe3\xcc\x59\x53\xfb\x07\x9b\xf3\x05\x2e\x9f\xd4\x96\x2f\x70\xf9\x7f\xde\x90\xf3\xe3\xb3\xce\x13\x04\xe4\xff\xb7\xe0\xed\x6b\xcd\x82\x3f\x9a\x43\x0a\xd6\x88\xcd\x52\x56\x3f\x83\xb5\xe0\x8f\x58\x49\x3d\x38\x1e\x41\x4c\x84\xc4\x0f\xac\x22\x83\x4b\xcf\x50\x3c\x55\xb6\x7a\x25\x30\x26\x02\xd3\x84\x24\xe5\xd9\x3a\xab\x4e\xde\xfb\xb1\xbe\x86\x6c\x87\xb5\x11\xa9\x04\x4c\xb2\x73\xeb\xae\xfd\xef\xa4\xa4\x6d\x09\xa2\x8b\x0f\x6c\xda\xa3\x16\xad\x54\x5d\xec\x71\x5d\x25\x7a\x3e\x21\x95\xc8\x64\xff\x34\xa2\xff\x58\x24\x82\x69\xc0\x9c\x76\x5b\x15\xd9\xb2\xb8\x1c\xd1\xce\x32\xdf\x21\x02\x6e\x2c\xa1\x1c\x1c\x1b\xd7\x75\xda\xc5\xdb\x33\x3b\x92\x8a\x30\x1d\x55\x33\x21\x29\x6b\xa3\x7a\x28\xe9\x9b\x15\x65\xa8\x7a\x89\xa9\x2a\x2a\x65\x8b\x2b\x6b\x22\x03\x9a\x76\xc0\x83\xcd\x97\xed\x39\x7e\x9b\x50\x06\x3e\x4e\x13\xa3\x5f\xc3\x4b\x0f\x15\x67\x55\x3d\x16\xae\x95\x8a\xda\x57\x95\x6f\x2a\x6a\x17\x2a\xf6\xbb\x89\x5c\x31\x0f\x44\xc2\x9c\x4c\x44\x8d\x45\x20\x66\xa7\x0c\x26\xb9\x3c\x9b\xea\x1c\x16\xd9\xf9\x8f\x1b\x53\x96\x70\xf9\xf6\xf2\x14\x66\x44\x4c\xc9\x0c\xc1\xe3\xa1\x1e\x3e\x29\x67\xb5\x5c\x5d\x90\x8b\x7a\x96\x8b\xb4\xb1\xb6\x09\x4b\xc2\xb0\xfe\xad\x12\x09\xd6\xbf\x35\xa7\x0e\xeb\x5f\xdb\xba\x9a\x06\xe4\x95\x9b\x8a\xcd\xed\xab\xdf\x36\x15\xda\x98\x5d\xea\xae\x45\x27\xd9\x22\xf2\xf5\x3c\x51\x3e\x5f\x32\x98\x58\x26\x5b\xaa\x74\xcc\x46\x7d\xda\xb0\xb2\x65\xb9\x38\xa5\x47\x9d\x48\x35\xb2\xf1\x18\xae\x88\x94\xa6\xc0\x9a\x30\x1f\x42\xca\x50\x27\x55\x49\x84\x4c\x49\x53\x93\x8d\x6c\x41\x05\x67\xfa\x01\x2c\x88\xa0\x64\x1a\xa2\x04\xc5\xe1\x57\x9c\xbe\x96\x12\xa3\x69\xb8\x82\xe9\xca\xd4\x01\x52\x36\x03\x35\xc7\x48\xbf\x56\x73\x34\xe8\x88\x68\xac\x7a\x31\xb5\x91\x41\x20\x51\x1b\xf9\xd1\xfe\x0f\xc7\x8d\x6c\x4b\x25\xae\x4c\x8c\x36\xa1\xb5\xd9\xef\x35\xe6\xd8\x34\xb6\xf8\xeb\xbd\x7d\x63\x87\xba\xbc\x1d\x6d\x41\xcb\x03\x9e\xa9\xdd\x33\xd1\x7d\x63\x6c\xd6\x83\xc7\x1e\x0c\xfe\xb5\x3f\x68\x8a\x6f\x29\xaf\x7b\x93\x75\x94\xce\x09\x3c\x37\x4c\x65\x8f\xfe\xde\xbc\x40\x9d\x1e\xd6\x89\x55\x5d\x99\x5c\xa3\x18\x89\x98\x79\xd9\x36\x21\x11\xb3\x45\x7e\x16\xb5\x19\x66\x71\xa5\x84\x09\x2f\x4d\x4e\x62\xf0\x05\x5c\x9c\x13\x6f\xee\x38\x44\xcc\x5a\xd4\x94\xe1\xb5\xc7\x5b\xad\x82\x0d\x58\xdd\x11\xa2\xaa\x4a\xf9\x82\xcc\x3b\x5c\x69\x12\xed\xf9\x1f\x57\xdf\x39\x59\x91\xdc\xd0\x95\x5c\xa8\x3a\xaf\x5d\xa7\x43\x03\x36\x67\x38\xa6\x45\xce\xe7\x1d\xae\x76\xe1\xf3\xf7\xbf\x7d\xbb\xc3\xd5\xc3\xe4\x6f\xdf\x32\x22\x6f\xee\x70\x75\xfb\xf0\xfb\x8e\xdc\xa7\x25\x83\x4d\x06\x9f\xd3\x91\xd3\x1e\xb7\xba\x92\xf6\x88\xe2\x24\x67\xe6\x13\xe6\x9c\x4c\xfb\x29\xd0\x2d\x48\x7b\xa4\xb4\x7d\x0b\xbe\x70\x95\x93\x9e\xc2\x58\xce\x69\x88\xe0\x18\xfc\xad\x67\xec\xbc\xf5\xcd\xe4\x34\xac\x66\x5b\xcb\x4e\xba\xe5\xdc\x21\xc9\x68\xda\xa2\xee\x50\x49\x98\x5d\xa6\xd6\xa7\x18\x0e\xba\x4e\x37\xb7\x2a\xda\xa7\xc4\xcf\x79\x3b\x85\xf7\x1c\x62\xc1\x67\x82\x44\x66\x7f\x9b\x84\x02\x89\xbf\x02\xdb\x47\x53\xf1\x6e\x76\x35\x4f\x2a\xc1\x4e\x13\xb2\x8d\xd8\x54\x08\x66\xba\xaa\x07\x99\x88\xdc\x21\xc8\x44\x20\x50\x05\x54\xda\x24\x68\x2e\x38\xe3\x89\x6c\x4e\xc2\x1a\xce\x69\x36\x10\x5d\x31\x16\xea\x8c\x4b\xc7\x3d\xb3\x68\xd0\x76\xbe\xbf\x87\xfc\x77\x3e\x6d\x4d\x96\x84\x6e\x59\x5f\xdd\xb1\xc9\xe6\x27\x1b\x69\x66\xdb\xd7\x4a\xf4\xfb\xec\xd3\x18\xa5\xf0\x0f\x67\xf0\xa2\x8e\xdb\xac\xb9\x54\x3e\x0a\x61\x4f\x78\x39\x83\x44\x92\x19\x9e\xc2\x8c\x7f\xf9\x2a\xbf\x2c\x89\x8c\xbe\xe0\x3d\x7a\x70\xa3\x7f\xc2\x94\x32\x22\x56\xb7\x70\x93\xe7\x13\xb7\xf5\x25\xfa\x19\x7e\x73\xb8\xaf\x6a\x45\xa6\x22\x93\x4e\x2b\x3e\x79\xea\xb1\xef\x79\x55\x68\x9f\xf1\xac\x8e\x7a\x8d\x63\x69\x26\x6b\x55\xfb\x03\x33\x9e\x16\x54\xe7\x24\xb1\x45\x75\x2b\x5b\x53\x5d\xa6\x7c\xbb\x5d\x29\x49\x72\x6d\x0a\xaf\x28\x51\xe8\x04\xd2\xd5\x0e\xf8\x8e\x86\xf6\xa0\x5c\x99\xb8\x9b\xc3\xdb\xe1\x48\xf7\x50\x3e\xca\x3a\x74\xd5\x1c\x99\x09\x47\x49\xa8\x1a\x42\x49\x86\x89\xa7\xf5\xd8\x83\x51\xb9\xec\x5b\x3b\x63\xf6\x8d\x1c\xfd\x56\x6a\x63\x60\x3c\x37\x43\xed\x9c\x31\x32\x9f\xb2\x59\xa3\x83\xd8\xd3\xa9\x93\x09\xec\xc3\x3f\xfe\x01\xdf\xa5\xe2\x68\xf7\x96\xf1\x18\x7c\x24\x7e\xc8\xbd\xbb\x91\x8d\x0a\x26\x30\x51\x66\xbe\x30\xc0\x85\x49\x39\xa5\xd2\x94\x28\x41\x3c\x6c\x8e\x0e\x33\x5e\x99\x67\xb7\x9f\x73\xd5\x80\x5b\xd1\xa1\x7f\xb1\x7a\x0d\x44\x9a\x9c\xcd\xb8\x41\x6b\x35\xe6\xe6\xb3\xbd\x0a\xdb\x1e\xba\x66\x79\xd1\xb1\xcb\x8b\xb5\xaa\x6d\xf8\x34\xc2\x26\x29\x05\xc1\x0f\x43\x67\xf8\xf2\x6c\x5c\xfe\xa4\x54\xfa\x7d\x29\x53\xcb\x31\x19\x28\xbc\x57\xe3\xaf\x64\x41\xec\xd3\x41\xf1\xd9\xa9\xac\x42\x05\x02\x54\xde\xfc\x35\xf3\x3f\x94\x2c\x38\x11\xe1\x08\xd6\x2c\x74\x83\xea\xac\xc6\x57\xc3\xea\xd6\xa9\x05\x0b\x94\x31\x67\x7a\x44\x7c\xb5\xc5\x45\xf6\xce\x35\x67\xf5\x7f\x34\x39\xb8\xb3\xbe\x00\x94\x62\x99\xae\x94\x9e\xe9\x6e\xa3\xa8\x73\x38\x03\xb0\x41\x70\x15\x62\xab\xad\x4a\xd4\xe9\xab\x5c\x93\xeb\xe0\x85\xfc\x0b\xd9\x2f\x88\xa8\x8b\x4f\xfa\x55\xc4\xcd\x64\xaf\x42\xb8\x83\x88\x50\x66\xce\x10\x0f\xb6\x23\x41\x81\x24\xfd\xd8\x0e\x67\x21\x37\xb5\xc4\xb9\xc2\xb6\x3e\x2c\x11\x71\xdf\xf2\x57\x34\x69\x5a\x7e\x48\x4d\xb7\xc6\x66\xcb\xc6\x96\x0e\xd0\x85\x81\x9d\x8d\xed\x87\xcc\xce\x7c\xba\x00\xea\x4f\x0c\x2b\x83\x57\x67\x63\x9f\x2e\x5e\x3d\x7b\x76\x36\xe5\xfe\x4a\xff\x1f\xe7\x3f\xcc\x07\xd0\xfe\x37\x00\x00\xff\xff\xc2\x60\x6e\xc0\x07\x4d\x00\x00")

func cmdServerIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_cmdServerIndexHtml,
		"cmd/server/index.html",
	)
}

func cmdServerIndexHtml() (*asset, error) {
	bytes, err := cmdServerIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/server/index.html", size: 19719, mode: os.FileMode(420), modTime: time.Unix(1534054924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/server/index.html": cmdServerIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": &bintree{nil, map[string]*bintree{
		"server": &bintree{nil, map[string]*bintree{
			"index.html": &bintree{cmdServerIndexHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

